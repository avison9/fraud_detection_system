name: Service Health Check

on:
  pull_request:
    branches:
      - master

jobs:
  healthcheck:
    runs-on: ubuntu-latest

    services:
      zookeeper:
        image: wurstmeister/zookeeper:latest
        ports:
          - 2181:2181

      broker1:
        image: wurstmeister/kafka:latest
        ports:
          - 9092:9092
        options: >-
          --env KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker1:9092
          --env KAFKA_LISTENER=PLAINTEXT://0.0.0.0:9092
          --env KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
          --env KAFKA_LISTENER_NAME=PLAINTEXT
          --env KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
          --env KAFKA_BROKER_ID=1
          --env KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092

      broker2:
        image: wurstmeister/kafka:latest
        ports:
          - 9093:9093
        options: >-
          --env KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker2:9093
          --env KAFKA_LISTENER=PLAINTEXT://0.0.0.0:9093
          --env KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
          --env KAFKA_LISTENER_NAME=PLAINTEXT
          --env KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
          --env KAFKA_BROKER_ID=2
          --env KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9093

      broker3:
        image: wurstmeister/kafka:latest
        ports:
          - 9094:9094
        options: >-
          --env KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker3:9094
          --env KAFKA_LISTENER=PLAINTEXT://0.0.0.0:9094
          --env KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
          --env KAFKA_LISTENER_NAME=PLAINTEXT
          --env KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
          --env KAFKA_BROKER_ID=3
          --env KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9094

      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --env MONGO_INITDB_ROOT_USERNAME=root
          --env MONGO_INITDB_ROOT_PASSWORD=password

      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          --env POSTGRES_USER=root
          --env POSTGRES_PASSWORD=password
          --env POSTGRES_DB=dev

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run health check tests
        run: |
          python -m unittest discover -s test -p 'test_*.py'
        env:
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          KAFKA_BROKER1: ${{ secrets.KAFKA_BROKER1 }}
          KAFKA_BROKER2: ${{ secrets.KAFKA_BROKER2 }}
          KAFKA_BROKER3: ${{ secrets.KAFKA_BROKER3 }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

